{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YCNdG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEvC,OACE,yBAAKC,UAAU,8CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPGK,EAAO,uCAAG,WAAOZ,GAAP,uBAAAa,EAAA,6DACfL,EADe,iDACiCM,UAAUd,GAD3C,+DAEFe,MAAMP,GAFJ,cAEfQ,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QATjB,kBAadW,GAbc,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdR,mBAAS,CACjC0B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACRhB,EAAQZ,GACL6B,MAAK,SAAAC,GACJH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAGd,CAACzB,IAEG0B,EDb2BK,CAAa/B,GAAjCsB,EAFyB,EAE/BJ,KAAcO,EAFiB,EAEjBA,QAEtB,OACE,oCACE,4BAAKzB,GACJyB,GAAW,uBAAGhB,UAAU,oCAAb,aACZ,yBAAKA,UAAU,mDAEXa,EAAOF,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACEW,IAAKX,EAAIf,IACLe,UEYHY,EAzBM,WAAO,IAAD,EAEWzC,mBAAS,CAAC,iBAFrB,mBAElB0C,EAFkB,KAEN3C,EAFM,KAQzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEI2C,EAAWd,KAAI,SAAApB,GAAQ,OACrB,kBAAC,EAAD,CACEgC,IAAKhC,EACLA,SAAUA,U,MCjBxBmC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1290b9fc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(category => [inputValue, ...category]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  // console.log(url);\r\n  return (\r\n    <div className=\"card animate__animated animate__backInDown\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=aCyJHftuJaXYN6okjC8oAbfgmJoBRTB6`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">loading..</p>}\r\n      <div className=\"card-grid animate__animated animate__fadeInDown\">\r\n        {\r\n          images.map(img =>\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(imgs => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n      });\r\n  }, [category]);\r\n\r\n  return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One puch man'])\r\n\r\n  // const handleAdd = () => {\r\n  //   setcategories([...categories, 'HunterxHunter']);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {\r\n          categories.map(category =>\r\n            <GifGrid\r\n              key={category}\r\n              category={category}\r\n            />)\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}